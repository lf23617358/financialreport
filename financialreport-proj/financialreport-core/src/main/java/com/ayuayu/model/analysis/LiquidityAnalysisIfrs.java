/*
 * Created on 1 六月 2016 ( Time 21:33:56 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a composite Primary Key

package com.ayuayu.model.analysis;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "LIQUIDITY_ANALYSIS_IFRS"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name = "LIQUIDITY_ANALYSIS_IFRS")
// Define named queries here
@NamedQueries({ @NamedQuery(name = "LiquidityAnalysisIfrs.countAll", query = "SELECT COUNT(x) FROM LiquidityAnalysisIfrs x") })
public class LiquidityAnalysisIfrs implements Serializable {

	private static final long serialVersionUID = 1L;

	// ----------------------------------------------------------------------
	// ENTITY PRIMARY KEY ( EMBEDDED IN AN EXTERNAL CLASS )
	// ----------------------------------------------------------------------
	@EmbeddedId
	private LiquidityAnalysisIfrsKey compositePrimaryKey;

	// ----------------------------------------------------------------------
	// ENTITY DATA FIELDS
	// ----------------------------------------------------------------------
	@Column(name = "CURRENT_RATIO")
	private Double currentRatio;

	@Column(name = "QUICK_RATIO")
	private Double quickRatio;

	@Column(name = "INTEREST_GUARANTEE")
	private Double interestGuarantee;

	// ----------------------------------------------------------------------
	// ENTITY LINKS ( RELATIONSHIP )
	// ----------------------------------------------------------------------

	// ----------------------------------------------------------------------
	// CONSTRUCTOR(S)
	// ----------------------------------------------------------------------
	public LiquidityAnalysisIfrs() {
		super();
		this.compositePrimaryKey = new LiquidityAnalysisIfrsKey();
	}

	// ----------------------------------------------------------------------
	// GETTER & SETTER FOR THE COMPOSITE KEY
	// ----------------------------------------------------------------------
	public void setStockId(String stockId) {
		this.compositePrimaryKey.setStockId(stockId);
	}

	public String getStockId() {
		return this.compositePrimaryKey.getStockId();
	}

	public void setYear(Short year) {
		this.compositePrimaryKey.setYear(year);
	}

	public Short getYear() {
		return this.compositePrimaryKey.getYear();
	}

	public void setSeason(Byte season) {
		this.compositePrimaryKey.setSeason(season);
	}

	public Byte getSeason() {
		return this.compositePrimaryKey.getSeason();
	}

	// ----------------------------------------------------------------------
	// GETTERS & SETTERS FOR FIELDS
	// ----------------------------------------------------------------------
	// --- DATABASE MAPPING : CURRENT_RATIO ( DOUBLE )
	public void setCurrentRatio(Double currentRatio) {
		this.currentRatio = currentRatio;
	}

	public Double getCurrentRatio() {
		return this.currentRatio;
	}

	// --- DATABASE MAPPING : QUICK_RATIO ( DOUBLE )
	public void setQuickRatio(Double quickRatio) {
		this.quickRatio = quickRatio;
	}

	public Double getQuickRatio() {
		return this.quickRatio;
	}

	// --- DATABASE MAPPING : INTEREST_GUARANTEE ( DOUBLE )
	public void setInterestGuarantee(Double interestGuarantee) {
		this.interestGuarantee = interestGuarantee;
	}

	public Double getInterestGuarantee() {
		return this.interestGuarantee;
	}

	// ----------------------------------------------------------------------
	// GETTERS & SETTERS FOR LINKS
	// ----------------------------------------------------------------------

	// ----------------------------------------------------------------------
	// toString METHOD
	// ----------------------------------------------------------------------
	public String toString() {
		StringBuffer sb = new StringBuffer();
		sb.append("[");
		if (compositePrimaryKey != null) {
			sb.append(compositePrimaryKey.toString());
		} else {
			sb.append("(null-key)");
		}
		sb.append("]:");
		sb.append(currentRatio);
		sb.append("|");
		sb.append(quickRatio);
		sb.append("|");
		sb.append(interestGuarantee);
		return sb.toString();
	}

}
